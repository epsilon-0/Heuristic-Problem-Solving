head	1.1;
access;
symbols
	zero-four-zero:1.1;
locks;
comment	@ * @;


1.1
date	96.12.09.16.13.01;	author neto;	state Exp;
branches;
next	;


desc
@Generate uniform euclidean inputs.
@



1.1
log
@Initial revision
@
text
@#include <stdio.h>
#include <stdlib.h>

#include "gb_flip.h"
#define SIZE (10000)
int main(int argc, char**argv) {
	int i,n;
	long s;
	if ( argc != 4 ) { 
		fprintf(stderr,"Usage: %s <seed> <n> <name>\n",argv[0]); exit(1);
	}
	s=atol(argv[1]);
	n=atoi(argv[2]);
	gb_init_rand(s);
	printf("NAME: %s\n",argv[3]);
	printf("TYPE: TSP\n");
	printf("COMMENT: Automatically generated with seed %ld by unif.c\n",s);
	printf("DIMENSION: %d\n",n);
	printf("EDGE_WEIGHT_TYPE: EUC_2D\n");
	printf("NODE_COORD_SECTION\n");
	for (i=0;i<n;i++) {
		int x,y;
		x=gb_unif_rand((long)SIZE);
		y=gb_unif_rand((long)SIZE);
		printf("%d %d %d\n",i+1,x,y);
	}
	printf("EOF\n");
	return 0;
}
@
