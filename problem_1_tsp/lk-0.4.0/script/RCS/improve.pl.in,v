head	1.2;
access;
symbols
	zero-four-zero:1.2;
locks
	neto:1.2; strict;
comment	@# @;


1.2
date	97.11.07.22.21.01;	author neto;	state Exp;
branches;
next	1.1;

1.1
date	97.06.20.23.02.01;	author neto;	state Exp;
branches;
next	;


desc
@Distill improvement data from LK output.
@


1.2
log
@Now we expect gzipped log files.
@
text
@#! @@PERL@@
# @@configure_input@@
# improve.pl
# Distill tour improvement data from LK output.
#
$number_expr = "(\\d+\\.?\\d*|\\.\\d+)"; # See Programming Perl
$lklen_expr = "\\(0+\\*2\\^32\\+$number_expr\\)";
$improve_expr = "=== improve by $lklen_expr to $lklen_expr\\s+after $number_expr";
open(IN, "zcat @@ARGV |");  # Uncompress input files.
open(IOUT ,">improve.gpl") || die "Can't open improve.gpl for writing";
#print STDERR "improve string is $improve_expr\n";
while(<IN>) {
	if( m/Initial tour length: $lklen_expr/o) {
		print IOUT "0 $1 # guess at 0 elapsed time from initial tour\n";
	} elsif( m/$improve_expr/o) {
		print IOUT "$3 $2\n";
	}
}
close(IOUT);
@


1.1
log
@Initial revision
@
text
@d9 1
d11 2
a12 2
print STDERR "improve string is $improve_expr\n";
while(<>) {
@
