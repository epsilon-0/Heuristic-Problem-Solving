Only in sat2005_submission-patched/SatELite_submission/ForMani/ADTs: depend.mak
diff -c -r sat2005_submission/SatELite_submission/ForMani/Global/Global.h sat2005_submission-patched/SatELite_submission/ForMani/Global/Global.h
*** sat2005_submission/SatELite_submission/ForMani/Global/Global.h	Wed Feb 23 18:45:33 2005
--- sat2005_submission-patched/SatELite_submission/ForMani/Global/Global.h	Wed Apr 13 17:02:52 2011
***************
*** 419,428 ****
      lbool operator ~  (void)               const { return lbool(-value); }
  
      friend int   toInt  (lbool l) { return l.toInt(); }
!     friend lbool toLbool(int   v) { return lbool(v); }
      friend char  name   (lbool l) { static char name[4] = {'!','0','?','1'}; int x = l.value; x = 2 + ((x >> (sizeof(int)*8-2)) | (x & ~(1 << (sizeof(int)*8-1)))); return name[x]; }
  };
  
  const lbool l_True  = toLbool( 1);
  const lbool l_False = toLbool(-1);
  const lbool l_Undef = toLbool( 0);
--- 419,430 ----
      lbool operator ~  (void)               const { return lbool(-value); }
  
      friend int   toInt  (lbool l) { return l.toInt(); }
!     friend lbool toLbool(int   v);
      friend char  name   (lbool l) { static char name[4] = {'!','0','?','1'}; int x = l.value; x = 2 + ((x >> (sizeof(int)*8-2)) | (x & ~(1 << (sizeof(int)*8-1)))); return name[x]; }
  };
  
+ lbool toLbool(int   v);
+  
  const lbool l_True  = toLbool( 1);
  const lbool l_False = toLbool(-1);
  const lbool l_Undef = toLbool( 0);
Only in sat2005_submission-patched/SatELite_submission/ForMani/Global: Global.h~
Only in sat2005_submission-patched/SatELite_submission/ForMani/Global: depend.mak
diff -c -r sat2005_submission/SatELite_submission/SatELite/Main.C sat2005_submission-patched/SatELite_submission/SatELite/Main.C
*** sat2005_submission/SatELite_submission/SatELite/Main.C	Wed Feb 23 18:45:37 2005
--- sat2005_submission-patched/SatELite_submission/SatELite/Main.C	Wed Apr 13 17:02:17 2011
***************
*** 19,24 ****
--- 19,27 ----
  #include <signal.h>
  #include "File.h"
  
+ Lit  toLit(int i) { Lit p; p.x = i; return p; }
+ lbool toLbool(int   v) { return lbool(v); }
+ 
  
  //=================================================================================================
  // Options:
***************
*** 75,81 ****
  cchar* output_file   = NULL;    // (doubles as result input from MiniSat)
  cchar* varmap_file   = NULL;
  cchar* elimed_file   = NULL;
! cchar* model_file    = NULL;
  int    verbosity     = 1;
  
  
--- 78,84 ----
  cchar* output_file   = NULL;    // (doubles as result input from MiniSat)
  cchar* varmap_file   = NULL;
  cchar* elimed_file   = NULL;
! char* model_file    = NULL;
  int    verbosity     = 1;
  
  
***************
*** 516,522 ****
              if (out == NULL) fprintf(stderr, "WARNING! Could not write model to: %s\n", model_file);
          }else{
            #ifdef VERIFY_MODEL
!             out = createTmpFile("/tmp/tmp_model__", "wb", (char*)model_file);
            #else
              out = NULL;
            #endif
--- 519,525 ----
              if (out == NULL) fprintf(stderr, "WARNING! Could not write model to: %s\n", model_file);
          }else{
            #ifdef VERIFY_MODEL
!             out = createTmpFile("/tmp/tmp_model__", "wb", model_file);
            #else
              out = NULL;
            #endif
Only in sat2005_submission-patched/SatELite_submission/SatELite: Main.C~
diff -c -r sat2005_submission/SatELite_submission/SatELite/SolverTypes.h sat2005_submission-patched/SatELite_submission/SatELite/SolverTypes.h
*** sat2005_submission/SatELite_submission/SatELite/SolverTypes.h	Wed Feb 23 18:45:39 2005
--- sat2005_submission-patched/SatELite_submission/SatELite/SolverTypes.h	Wed Apr 13 17:03:07 2011
***************
*** 36,47 ****
      friend bool sign (Lit p) { return p.x & 1; }
      friend int  var  (Lit p) { return p.x >> 1; }
      friend int  index(Lit p) { return p.x; }        // A "toInt" method that guarantees small, positive integers suitable for array indexing.
!     friend Lit  toLit(int i) { Lit p; p.x = i; return p; }
  
      friend bool operator == (Lit p, Lit q) { return index(p) == index(q); }
      friend bool operator <  (Lit p, Lit q) { return index(p)  < index(q); }  // '<' guarantees that p, ~p are adjacent in the ordering.
  };
  
  const Lit lit_Undef(var_Undef, false);  // }- Useful special constants.
  const Lit lit_Error(var_Undef, true );  // }
  
--- 36,49 ----
      friend bool sign (Lit p) { return p.x & 1; }
      friend int  var  (Lit p) { return p.x >> 1; }
      friend int  index(Lit p) { return p.x; }        // A "toInt" method that guarantees small, positive integers suitable for array indexing.
!     friend Lit  toLit(int i);
  
      friend bool operator == (Lit p, Lit q) { return index(p) == index(q); }
      friend bool operator <  (Lit p, Lit q) { return index(p)  < index(q); }  // '<' guarantees that p, ~p are adjacent in the ordering.
  };
  
+ Lit  toLit(int i);
+ 
  const Lit lit_Undef(var_Undef, false);  // }- Useful special constants.
  const Lit lit_Error(var_Undef, true );  // }
  
Only in sat2005_submission-patched/SatELite_submission/SatELite: SolverTypes.h~
diff -c -r sat2005_submission/SatELite_submission/SatELite/Solver_clause.iC sat2005_submission-patched/SatELite_submission/SatELite/Solver_clause.iC
*** sat2005_submission/SatELite_submission/SatELite/Solver_clause.iC	Wed Feb 23 18:45:38 2005
--- sat2005_submission-patched/SatELite_submission/SatELite/Solver_clause.iC	Wed Apr 13 17:00:01 2011
***************
*** 24,30 ****
  VecAlloc<Size28> mem28;
  
  template <class T> macro void* ymalloc(int size);
! template <> macro void* ymalloc<char>(int size)
  {
      if      (size == 24) return (void*)mem24.alloc();
      else if (size == 28) return (void*)mem28.alloc();
--- 24,30 ----
  VecAlloc<Size28> mem28;
  
  template <class T> macro void* ymalloc(int size);
! template <> inline void* ymalloc<char>(int size)
  {
      if      (size == 24) return (void*)mem24.alloc();
      else if (size == 28) return (void*)mem28.alloc();
Only in sat2005_submission-patched/SatELite_submission/SatELite: Solver_clause.iC~
Only in sat2005_submission-patched/SatELite_submission/SatELite: TmpFiles.C~
